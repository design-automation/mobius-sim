import { EEntType, EEntTypeStr } from './common';
// global variables to store ID mappings
const ID_MAP = new Map();
const ID_REV_MAP = new Map();
ID_REV_MAP.set(EEntType.POSI, new Map());
ID_REV_MAP.set(EEntType.VERT, new Map());
ID_REV_MAP.set(EEntType.EDGE, new Map());
ID_REV_MAP.set(EEntType.WIRE, new Map());
ID_REV_MAP.set(EEntType.POINT, new Map());
ID_REV_MAP.set(EEntType.PLINE, new Map());
ID_REV_MAP.set(EEntType.PGON, new Map());
ID_REV_MAP.set(EEntType.COLL, new Map());
// ============================================================================
export function idMake(ent_type, ent_i) {
    const id = ID_REV_MAP.get(ent_type).get(ent_i);
    if (id !== undefined) {
        return id;
    }
    const new_id = EEntTypeStr[ent_type] + ent_i;
    ID_MAP.set(new_id, [ent_type, ent_i]);
    ID_REV_MAP.get(ent_type).set(ent_i, new_id);
    return new_id;
}
export function idsMake(ents) {
    if (!Array.isArray(ents[0])) {
        if (ents.length === 0) {
            return [];
        } //  deal with empty array
        return idMake(ents[0], ents[1]);
    }
    else {
        ents = ents;
        return ents.map(ent_type_idxs_arr => idsMake(ent_type_idxs_arr));
    }
}
export function idsMakeFromIdxs(ent_type, idxs) {
    if (!Array.isArray(idxs)) {
        return idMake(ent_type, idxs);
    }
    else {
        idxs = idxs;
        if (idxs.length === 0) {
            return [];
        } //  deal with empty array
        return idxs.map(idx => idsMakeFromIdxs(ent_type, idx));
    }
}
// ============================================================================
export function idBreak(id) {
    const ent = ID_MAP.get(id);
    if (ent === undefined) {
        throw new Error('The entity ID "' + id + '" is not a valid entity ID.');
    }
    return ent;
}
export function idsBreak(id) {
    if (id === null) {
        return null;
    }
    if (!Array.isArray(id)) {
        return idBreak(id);
    }
    else {
        return id.map(a_id => idsBreak(a_id));
    }
}
// ============================================================================
export function getEntIdxs(ents_arr) {
    return ents_arr.map(ents => ents[1]);
}
// ============================================================================
// more general test
export function isTopo(ent_type) {
    if (ent_type === EEntType.VERT) {
        return true;
    }
    if (ent_type === EEntType.EDGE) {
        return true;
    }
    if (ent_type === EEntType.WIRE) {
        return true;
    }
    return false;
}
export function isObj(ent_type) {
    if (ent_type === EEntType.PGON) {
        return true;
    }
    if (ent_type === EEntType.PLINE) {
        return true;
    }
    if (ent_type === EEntType.POINT) {
        return true;
    }
    return false;
}
export function isDim0(ent_type) {
    if (ent_type === EEntType.POSI) {
        return true;
    }
    if (ent_type === EEntType.VERT) {
        return true;
    }
    if (ent_type === EEntType.POINT) {
        return true;
    }
    return false;
}
export function isDim1(ent_type) {
    if (ent_type === EEntType.EDGE) {
        return true;
    }
    if (ent_type === EEntType.PLINE) {
        return true;
    }
    return false;
}
export function isDim2(ent_type) {
    if (ent_type === EEntType.PGON) {
        return true;
    }
    return false;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uX2lkX2Z1bmNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYnMvZ2VvLWluZm8vY29tbW9uX2lkX2Z1bmNzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBTyxRQUFRLEVBQUUsV0FBVyxFQUFlLE1BQU0sVUFBVSxDQUFDO0FBRW5FLHdDQUF3QztBQUN4QyxNQUFNLE1BQU0sR0FBa0MsSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUN4RCxNQUFNLFVBQVUsR0FBcUMsSUFBSSxHQUFHLEVBQUUsQ0FBQztBQUMvRCxVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBRSxDQUFDO0FBQzFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxJQUFJLEdBQUcsRUFBRSxDQUFFLENBQUM7QUFDMUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksR0FBRyxFQUFFLENBQUUsQ0FBQztBQUMxQyxVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBRSxDQUFDO0FBQzFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssRUFBRSxJQUFJLEdBQUcsRUFBRSxDQUFFLENBQUM7QUFDM0MsVUFBVSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLElBQUksR0FBRyxFQUFFLENBQUUsQ0FBQztBQUMzQyxVQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxHQUFHLEVBQUUsQ0FBRSxDQUFDO0FBQzFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxJQUFJLEdBQUcsRUFBRSxDQUFFLENBQUM7QUFFMUMsK0VBQStFO0FBQy9FLE1BQU0sVUFBVSxNQUFNLENBQUMsUUFBa0Is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b0JBQW9CO0FBQ3BCLE1BQU0sVUFBVSxNQUFNLENBQUMsUUFBa0I7SUFDckMsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQUNELE1BQU0sVUFBVSxLQUFLLENBQUMsUUFBa0I7SUFDcEMsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLEtBQUssRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDakQsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLEtBQUssRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDakQsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQUNELE1BQU0sVUFBVSxNQUFNLENBQUMsUUFBa0I7SUFDckMsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLEtBQUssRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDakQsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQUNELE1BQU0sVUFBVSxNQUFNLENBQUMsUUFBa0I7SUFDckMsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLEtBQUssRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDakQsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQztBQUNELE1BQU0sVUFBVSxNQUFNLENBQUMsUUFBa0I7SUFDckMsSUFBSSxRQUFRLEtBQUssUUFBUSxDQUFDLElBQUksRUFBRTtRQUFFLE9BQU8sSUFBSSxDQUFDO0tBQUU7SUFDaEQsT0FBTyxLQUFLLENBQUM7QUFDakIsQ0FBQyJ9